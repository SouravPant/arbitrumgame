(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))l(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const m of s.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&l(m)}).observe(document,{childList:!0,subtree:!0});function a(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function l(o){if(o.ep)return;o.ep=!0;const s=a(o);fetch(o.href,s)}})();const r=[100,500,1e3,5e3,1e4,5e4,1e5,2e5,3e5],u=[.001,.005,.01,.05,.1,.5,1,2,3];let i={totalTaps:42,nftsMinted:0,achievedMilestones:[],currentRank:"-",walletAddress:null,isConnected:!1},n={};function g(){n={tapButton:document.getElementById("tapButton"),totalTaps:document.getElementById("totalTaps"),nftsMinted:document.getElementById("nftsMinted"),mintButton:document.getElementById("mintButton"),mintStatus:document.getElementById("mintStatus"),milestones:document.getElementById("milestones"),leaderboard:document.getElementById("leaderboard"),walletStatus:document.getElementById("walletStatus")},console.log("Elements initialized:",{totalTaps:!!n.totalTaps,nftsMinted:!!n.nftsMinted,tapButton:!!n.tapButton})}const f=document.querySelectorAll(".nav-item"),y=document.querySelectorAll(".content-section");f.forEach(t=>{t.addEventListener("click",()=>{const e=t.getAttribute("data-section");f.forEach(a=>a.classList.remove("active")),t.classList.add("active"),y.forEach(a=>a.classList.remove("active")),document.getElementById(e).classList.add("active")})});function T(){n.milestones.innerHTML=r.map((t,e)=>`
                <div class="milestone" data-milestone="${t}" onclick="claimMilestone(${t})">
                    <div class="milestone-value">${c(t)}</div>
                    <div class="milestone-status">${u[e]} ETH</div>
                    <button class="milestone-claim" id="claim-${t}" style="display: none;">
                        🪙 Claim NFT
                    </button>
                </div>
            `).join("")}function v(){const t=[{rank:1,name:"Arbitrum_Champion",score:125e4},{rank:2,name:"TapMaster_Pro",score:89e4},{rank:3,name:"NFT_Collector",score:65e4},{rank:4,name:"Web3_Gamer",score:42e4},{rank:5,name:"Crypto_Tapper",score:31e4}];n.leaderboard.innerHTML=t.map(e=>`
                <div class="leaderboard-item">
                    <div class="rank">#${e.rank}</div>
                    <div class="player-info">
                        <div class="player-name">${e.name}</div>
                        <div class="player-score">${c(e.score)} taps</div>
                    </div>
                </div>
            `).join("")}function c(t){return t>=1e6?(t/1e6).toFixed(1)+"M":t>=1e3?(t/1e3).toFixed(1)+"K":t.toString()}function d(){if(console.log("Updating stats:",i.totalTaps,i.nftsMinted),n.totalTaps&&(n.totalTaps.textContent=c(i.totalTaps),console.log("Total taps element updated:",n.totalTaps.textContent)),n.nftsMinted&&(n.nftsMinted.textContent=c(i.nftsMinted),console.log("NFTs minted element updated:",n.nftsMinted.textContent)),n.mintButton){const t=r.find(e=>e>i.totalTaps);if(t){const e=t-i.totalTaps;n.mintButton.textContent=`🪙 Mint NFT (${c(e)} more taps)`,n.mintButton.disabled=!0}else n.mintButton.textContent="🎉 All Milestones Achieved!",n.mintButton.disabled=!0}h()}function h(){n.milestones.querySelectorAll(".milestone").forEach((e,a)=>{const l=r[a];if(e.classList.remove("achieved","next","claimable"),i.achievedMilestones.includes(l))e.classList.add("achieved");else if(i.totalTaps>=l){e.classList.add("claimable");const o=e.querySelector(".milestone-claim");o&&(o.style.display="block")}else l===r.find(o=>o>i.totalTaps)&&e.classList.add("next")})}function M(){r.forEach((t,e)=>{i.totalTaps>=t&&!i.achievedMilestones.includes(t)&&(i.achievedMilestones.push(t),i.nftsMinted++,n.mintButton.disabled=!1,n.mintButton.textContent=`🪙 Mint NFT Now! (${c(t)} taps)`,p(t,u[e]),d())})}function p(t,e,a=null){const l=document.createElement("div");l.className="achievement-notification";let o="";a&&(o=`<p style="margin-bottom: 8px; font-size: 0.875rem; color: var(--text-secondary);">TX: ${a.slice(0,10)}...${a.slice(-8)}</p>`),l.innerHTML=`
                <h3 style="margin-bottom: 12px; font-size: 1.25rem; font-weight: 700;">🎉 Milestone Achieved!</h3>
                <p style="margin-bottom: 8px; font-size: 1.125rem;">${c(t)} taps reached!</p>
                <p style="margin-bottom: 8px; color: var(--notcoin-yellow); font-weight: 600;">Reward: ${e} ETH</p>
                <p style="font-weight: 700; color: var(--accent);">NFT claimed successfully!</p>
                ${o}
            `,document.body.appendChild(l),setTimeout(()=>{l.style.animation="slideOutRight 0.5s ease-in",setTimeout(()=>l.remove(),500)},5e3)}function w(t){const e=document.createElement("div");e.className="achievement-notification",e.style.background="var(--error)",e.innerHTML=`
                <h3 style="margin-bottom: 12px; font-size: 1.25rem; font-weight: 700;">❌ Error</h3>
                <p style="margin-bottom: 8px; font-size: 1.125rem;">${t}</p>
                <p style="font-weight: 700; color: #fff;">Please try again</p>
            `,document.body.appendChild(e),setTimeout(()=>{e.style.animation="slideOutRight 0.5s ease-in",setTimeout(()=>e.remove(),500)},5e3)}async function b(){try{n.mintStatus.innerHTML='<span class="loading"></span>Minting NFT on Arbitrum...',n.mintButton.disabled=!0,await new Promise(t=>setTimeout(t,3e3)),n.mintStatus.innerHTML="<span>✅ NFT minted successfully on Arbitrum!</span>",n.mintButton.textContent="🎉 NFT Minted!"}catch(t){n.mintStatus.innerHTML=`<span>❌ Minting failed: ${t.message}</span>`,n.mintButton.disabled=!1}}async function B(t){if(i.totalTaps>=t&&!i.achievedMilestones.includes(t))try{const e=document.querySelector(`[data-milestone="${t}"]`),a=e.querySelector(".milestone-claim");if(a.textContent="⏳ Claiming...",a.disabled=!0,!window.gameContract||!window.gameContract.account)throw new Error("Wallet not connected. Please connect your wallet first.");const l=r.indexOf(t),o=u[l],s=await window.gameContract.claimNFTMilestone(t,o);if(s.success)i.achievedMilestones.push(t),i.nftsMinted++,a.textContent="✅ Claimed!",a.style.background="var(--success)",e.classList.add("achieved"),e.classList.remove("claimable"),p(t,o,s.txHash),d(),console.log(`NFT claimed successfully! TX Hash: ${s.txHash}`);else throw new Error("Blockchain transaction failed")}catch(e){claimButton.textContent="❌ Failed",claimButton.style.background="var(--error)",console.error("Claim failed:",e),w(e.message)}}function E(){n.tapButton&&n.tapButton.addEventListener("click",async()=>{if(i.totalTaps++,n.tapButton.style.transform="scale(0.95)",setTimeout(()=>{n.tapButton.style.transform="scale(1)"},100),window.gameContract&&window.gameContract.account)try{await window.gameContract.updatePlayerTaps(i.totalTaps),console.log("Taps updated on blockchain")}catch(t){console.error("Failed to update taps on blockchain:",t)}M(),d()}),n.mintButton&&n.mintButton.addEventListener("click",b)}function C(){g(),T(),v(),E(),d(),n.totalTaps&&(n.totalTaps.textContent=c(i.totalTaps),console.log("Initial total taps set to:",i.totalTaps)),n.nftsMinted&&(n.nftsMinted.textContent=c(i.nftsMinted),console.log("Initial NFTs minted set to:",i.nftsMinted))}document.addEventListener("DOMContentLoaded",()=>{console.log("DOM Content Loaded - Initializing game..."),console.log("Game state:",i),C()});window.updateStats=d;window.claimMilestone=B;
